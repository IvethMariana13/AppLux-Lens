˜
nE:\Documentos\GitHub\AppLux-Lens\Lux-Lens.Api\Lux-Lens.ApplicationServices\Lens\Authentication\IUserService.cs
	namespace		 	
Lux_Lens		
 
.		 
ApplicationServices		 &
.		& '
Lens		' +
.		+ ,
Authentication		, :
{

 
public 

	interface 
IUserService !
{ 
Task 
< 
IdentityResult 
> 
AddUserAsync )
() *

NewUserDto* 4
userDto5 <
)< =
;= >
Task 
< 
IEnumerable 
< 
UserDto  
>  !
>! "
GetUsersAsync# 0
(0 1
)1 2
;2 3
} 
} ‘
mE:\Documentos\GitHub\AppLux-Lens\Lux-Lens.Api\Lux-Lens.ApplicationServices\Lens\Authentication\UserService.cs
	namespace 	
Lux_Lens
 
. 
ApplicationServices &
.& '
Lens' +
.+ ,
Authentication, :
{ 
public 

class 
UserService 
: 
IUserService *
{ 
private 
readonly 
UserManager $
<$ %
IdentityUser% 1
>1 2
_userManager3 ?
;? @
private 
readonly 
LensDbContext &
_context' /
;/ 0
private 
readonly 
IMapper  
_mapper! (
;( )
public 
UserService 
( 
UserManager &
<& '
IdentityUser' 3
>3 4
userManager5 @
,@ A
LensDbContextB O
contextP W
,W X
IMapperY `
mappera g
)g h
{ 	
_userManager 
= 
userManager &
;& '
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
IdentityResult (
>( )
AddUserAsync* 6
(6 7

NewUserDto7 A
userDtoB I
)I J
{ 	
var 
result 
= 
await 
_userManager +
.+ ,
CreateAsync, 7
(7 8
new8 ;
IdentityUser< H
{ 
Email 
= 
userDto 
.  
Email  %
,% &
EmailConfirmed 
=  
true! %
,% &
UserName 
= 
userDto "
." #
Email# (
,( )
PhoneNumber   
=   
userDto   %
.  % &
PhoneNumber  & 1
}!! 
,!! 
userDto!! 
.!! 
Password!! 
)!!  
;!!  !
return## 
result## 
;## 
}%% 	
public&& 
async&& 
Task&& 
<&& 
IEnumerable&& %
<&&% &
UserDto&&& -
>&&- .
>&&. /
GetUsersAsync&&0 =
(&&= >
)&&> ?
{'' 	
List(( 
<(( 
IdentityUser(( 
>(( 
users(( $
=((% &
await((' ,
_userManager((- 9
.((9 :
Users((: ?
.((? @
ToListAsync((@ K
(((K L
)((L M
;((M N
List** 
<** 
UserDto** 
>** 
usersDto** "
=**# $
new**% (
List**) -
<**- .
UserDto**. 5
>**5 6
(**6 7
)**7 8
;**8 9
foreach,, 
(,, 
var,, 
user,, 
in,,  
users,,! &
),,& '
{-- 
usersDto.. 
... 
Add.. 
(.. 
_mapper.. $
...$ %
Map..% (
<..( )
UserDto..) 0
>..0 1
(..1 2
user..2 6
)..6 7
)..7 8
;..8 9
}// 
return11 
usersDto11 
;11 
}22 	
}33 
}44 ²

_E:\Documentos\GitHub\AppLux-Lens\Lux-Lens.Api\Lux-Lens.ApplicationServices\Lens\ILensService.cs
	namespace 	
Lux_Lens
 
. 
ApplicationServices &
.& '
Lens' +
{ 
public 

	interface 
ILensService !
{ 
Task 
< 
List 
< 
Core 
. 
Entities 
.  
Lens  $
>$ %
>% &
GetLensAsync' 3
(3 4
)4 5
;5 6
Task

 
<

 
int

 
>

 
AddLensAsync

 
(

 
LensDto

 &
lens

' +
)

+ ,
;

, -
Task 
DeleteLensAsync 
( 
int  
lensId! '
)' (
;( )
Task 
< 
Core 
. 
Entities 
. 
Lens 
>  
GetLensByIdAsync! 1
(1 2
int2 5
lensId6 <
)< =
;= >
Task 
EditLensAsync 
( 
LensDto "
lens# '
,' (
int) ,
id- /
)/ 0
;0 1
} 
} ¿+
^E:\Documentos\GitHub\AppLux-Lens\Lux-Lens.Api\Lux-Lens.ApplicationServices\Lens\LensService.cs
	namespace 	
Lux_Lens
 
. 
ApplicationServices &
.& '
Lens' +
{		 
public

 

class

 
LensService

 
:

 
ILensService

 +
{ 
private 
readonly 
IRepository $
<$ %
int% (
,( )
Core* .
.. /
Entities/ 7
.7 8
Lens8 <
>< =
_repository> I
;I J
private 
readonly 
IMapper  
_mapper! (
;( )
public 
LensService 
( 
IRepository &
<& '
int' *
,* +
Core, 0
.0 1
Entities1 9
.9 :
Lens: >
>> ?

repository@ J
,J K
IMapperL S
mapperT Z
)Z [
{ 	
_repository 
= 

repository $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
int 
> 
AddLensAsync +
(+ ,
LensDto, 3
lens4 8
)8 9
{ 	
var 
m 
= 
_mapper 
. 
Map 
<  
Core  $
.$ %
Entities% -
.- .
Lens. 2
>2 3
(3 4
lens4 8
)8 9
;9 :
await 
_repository 
. 
AddAsync &
(& '
m' (
)( )
;) *
return 
$num 
; 
} 	
public 
async 
Task 
DeleteLensAsync )
() *
int* -
lensId. 4
)4 5
{ 	
await   
_repository   
.   
DeleteAsync   )
(  ) *
lensId  * 0
)  0 1
;  1 2
}!! 	
public## 
async## 
Task## 
EditLensAsync## '
(##' (
LensDto##( /
lens##0 4
,##4 5
int##6 9
id##: <
)##< =
{$$ 	
Core%% 
.%% 
Entities%% 
.%% 
Lens%% 
len%% "
=%%# $
new%%% (
Core%%) -
.%%- .
Entities%%. 6
.%%6 7
Lens%%7 ;
{&& 
Id'' 
='' 
id'' 
,'' 
Modelo(( 
=(( 
lens(( 
.(( 
Modelo(( $
,(($ %
Marca)) 
=)) 
lens)) 
.)) 
Marca)) "
,))" #
Cantidad** 
=** 
lens** 
.**  
Cantidad**  (
,**( )
Color++ 
=++ 
lens++ 
.++ 
Color++ "
,++" #
Material,, 
=,, 
lens,, 
.,,  
Material,,  (
,,,( )
Precio-- 
=-- 
lens-- 
.-- 
Precio-- $
,--$ %
}.. 
;.. 
await// 
_repository// 
.// 
UpdateAsync// )
(//) *
len//* -
)//- .
;//. /
}00 	
public22 
async22 
Task22 
<22 
List22 
<22 
Core22 #
.22# $
Entities22$ ,
.22, -
Lens22- 1
>221 2
>222 3
GetLensAsync224 @
(22@ A
)22A B
{33 	
var44 
m44 
=44 
await44 
_repository44 %
.44% &
GetAll44& ,
(44, -
)44- .
.44. /
ToListAsync44/ :
(44: ;
)44; <
;44< =
List55 
<55 
Core55 
.55 
Entities55 
.55 
Lens55 #
>55# $
lens55% )
=55* +
_mapper55, 3
.553 4
Map554 7
<557 8
List558 <
<55< =
Core55= A
.55A B
Entities55B J
.55J K
Lens55K O
>55O P
>55P Q
(55Q R
m55R S
)55S T
;55T U
return66 
lens66 
;66 
}77 	
public99 
async99 
Task99 
<99 
Core99 
.99 
Entities99 '
.99' (
Lens99( ,
>99, -
GetLensByIdAsync99. >
(99> ?
int99? B
lensId99C I
)99I J
{:: 	
var;; 
m;; 
=;; 
await;; 
_repository;; %
.;;% &
GetAsync;;& .
(;;. /
lensId;;/ 5
);;5 6
;;;6 7
Core<< 
.<< 
Entities<< 
.<< 
Lens<< 
lens<< #
=<<$ %
_mapper<<& -
.<<- .
Map<<. 1
<<<1 2
Core<<2 6
.<<6 7
Entities<<7 ?
.<<? @
Lens<<@ D
><<D E
(<<E F
m<<F G
)<<G H
;<<H I
return== 
lens== 
;== 
}>> 	
}?? 
}@@ ƒ
[E:\Documentos\GitHub\AppLux-Lens\Lux-Lens.Api\Lux-Lens.ApplicationServices\MapperProfile.cs
	namespace 	
Lux_Lens
 
. 
ApplicationServices &
{ 
public 

class 
MapperProfile 
:  
Profile! (
{ 
public 
MapperProfile 
( 
) 
{ 	
	CreateMap 
< 
LensDto 
, 
Core #
.# $
Entities$ ,
., -
Lens- 1
>1 2
(2 3
)3 4
;4 5
	CreateMap 
< 
Core 
. 
Entities #
.# $
Lens$ (
,( )
LensDto* 1
>1 2
(2 3
)3 4
;4 5
	CreateMap 
< 
IdentityUser "
," #
UserDto$ +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
UserDto 
, 
IdentityUser +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
IdentityUser "
," #

NewUserDto$ .
>. /
(/ 0
)0 1
;1 2
	CreateMap 
< 

NewUserDto  
,  !
IdentityUser" .
>. /
(/ 0
)0 1
;1 2
} 	
} 
} 